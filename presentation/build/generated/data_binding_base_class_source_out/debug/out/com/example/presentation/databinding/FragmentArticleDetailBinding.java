// Generated by data binding compiler. Do not edit!
package com.example.presentation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.presentation.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentArticleDetailBinding extends ViewDataBinding {
  @NonNull
  public final ConstraintLayout clParent;

  @NonNull
  public final FrameLayout flSaveIcon;

  @NonNull
  public final AppCompatImageView ivIconNotSaved;

  @NonNull
  public final AppCompatImageView ivIconSaved;

  @NonNull
  public final AppCompatImageView ivNewsThumbnail;

  @NonNull
  public final ToolbarBackBinding toolbar;

  @NonNull
  public final AppCompatTextView tvAuthor;

  @NonNull
  public final AppCompatTextView tvNewsContent;

  @NonNull
  public final AppCompatTextView tvNewsTitle;

  @NonNull
  public final AppCompatTextView tvPublishTime;

  protected FragmentArticleDetailBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ConstraintLayout clParent, FrameLayout flSaveIcon, AppCompatImageView ivIconNotSaved,
      AppCompatImageView ivIconSaved, AppCompatImageView ivNewsThumbnail,
      ToolbarBackBinding toolbar, AppCompatTextView tvAuthor, AppCompatTextView tvNewsContent,
      AppCompatTextView tvNewsTitle, AppCompatTextView tvPublishTime) {
    super(_bindingComponent, _root, _localFieldCount);
    this.clParent = clParent;
    this.flSaveIcon = flSaveIcon;
    this.ivIconNotSaved = ivIconNotSaved;
    this.ivIconSaved = ivIconSaved;
    this.ivNewsThumbnail = ivNewsThumbnail;
    this.toolbar = toolbar;
    this.tvAuthor = tvAuthor;
    this.tvNewsContent = tvNewsContent;
    this.tvNewsTitle = tvNewsTitle;
    this.tvPublishTime = tvPublishTime;
  }

  @NonNull
  public static FragmentArticleDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_article_detail, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentArticleDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentArticleDetailBinding>inflateInternal(inflater, R.layout.fragment_article_detail, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentArticleDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_article_detail, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentArticleDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentArticleDetailBinding>inflateInternal(inflater, R.layout.fragment_article_detail, null, false, component);
  }

  public static FragmentArticleDetailBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentArticleDetailBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentArticleDetailBinding)bind(component, view, R.layout.fragment_article_detail);
  }
}
